import{i as c,S as l}from"./assets/vendor-5b791d57.js";(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();const a=document.querySelector(".form"),u=document.querySelector(".gallery"),d=document.querySelector("input"),p=document.querySelector(".container");a.addEventListener("submit",s=>{s.preventDefault();const n="22866492-0a616de8c4fefaa29c0c168ad",i=d.value;m(),fetch(`https://pixabay.com/api/?key=${n}&q=${i}&image_type=photo&orientation=horizontal&safesearch=true`).then(r=>{if(!r.ok)throw new Error(r.status);return r.json()}).then(r=>{if(r.hits.length===0)c.error({title:"",backgroundColor:"#EF4040",message:"Sorry, there are no images matching your search query. Please try again!"});else{const e=r.hits.map(o=>`<li class="gallery-item">
                        <a href="${o.largeImageURL}">
                          <img class="gallery-image" src="${o.webformatURL}" alt="${o.tags}">
                        </a>
                        <p><b>Likes: </b>${o.likes}</p>
                        <p><b>Views: </b>${o.views}</p>
                        <p><b>Comments: </b>${o.comments}</p>
                        <p><b>Downloads: </b>${o.downloads}</p>
                      </li>`).join("");u.innerHTML=e;const t=new l(".gallery a",{captions:!0,captionSelector:"img",captionType:"attr",captionsData:"alt",captionPosition:"bottom",animation:250});t.on("show.simplelightbox"),t.refresh(),a.reset()}}).catch(r=>{console.error("Error fetching images:",r)}).finally(()=>{f()})});const m=()=>{const s=document.createElement("span");s.classList.add("loader"),p.appendChild(s)},f=()=>{const s=document.querySelector(".loader");s&&s.remove()};
//# sourceMappingURL=commonHelpers.js.map
